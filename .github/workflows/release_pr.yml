name: RELEASE [PRODUCTION] - Create Release PR

on:
    workflow_dispatch:
        inputs:
            release_version:
                description: 'Release version (e.g., 1.0.0)'
                required: true
                type: string

permissions:
    contents: write
    pull-requests: write
    actions: read

jobs:
    validate:
        name: Validate release requirements
        runs-on: ubuntu-latest
        outputs:
            release_needed: ${{ steps.release_check.outputs.release_needed }}
        steps:
            - uses: actions/checkout@v4
              with:
                  ref: develop
                  fetch-depth: 0

            - name: Check if release is needed
              id: release_check
              run: |
                  git fetch origin main develop
                  AHEAD_COUNT=$(git rev-list --count origin/main..origin/develop)
                  if [ "$AHEAD_COUNT" -eq 0 ]; then
                    echo "release_needed=false" >> $GITHUB_OUTPUT
                    exit 1
                  else
                    echo "release_needed=true" >> $GITHUB_OUTPUT
                  fi

            - name: Validate translations
              id: translations
              run: |
                  echo "🔍 Checking translations..."
                  if grep -r "MISSING_TRANSLATIONS" src/resources/i18n/*/translation.json; then
                    echo "❌ Found missing translations!"
                    echo "translations_ok=false" >> $GITHUB_OUTPUT
                    exit 1
                  else
                    echo "✅ All translations are complete."
                    echo "translations_ok=true" >> $GITHUB_OUTPUT
                  fi

    prepare:
        name: Prepare release branch
        runs-on: ubuntu-latest
        needs: validate
        if: needs.validate.outputs.release_needed == 'true'
        steps:
            - uses: actions/checkout@v4
              with:
                  ref: develop
                  fetch-depth: 0

            - uses: actions/setup-node@v4
              with:
                  node-version: '18'
                  cache: 'npm'

            - run: npm ci

            - name: Create release branch
              run: |
                  VERSION=${{ inputs.release_version }}
                  BRANCH_NAME="release/$VERSION"
                  git config user.name "github-actions[bot]"
                  git config user.email "github-actions[bot]@users.noreply.github.com"
                  git checkout -b "$BRANCH_NAME"
                  npm version "$VERSION" --no-git-tag-version
                  git commit -am "chore: bump version to $VERSION [skip ci]"
                  git push origin "$BRANCH_NAME"
                  echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

    pr:
        name: Create release Pull Request
        runs-on: ubuntu-latest
        needs: prepare
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Generate changelog (merged PRs from develop)
              id: changelog
              uses: actions/github-script@v7
              with:
                  script: |
                      const prs = await github.paginate(github.pulls.list, {
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        state: "closed",
                        base: "develop"
                      });
                      const merged = prs.filter(pr => pr.merged_at);
                      return merged.map(pr => `- #${pr.number} ${pr.title} (@${pr.user.login})`).join("\n");

            - name: Create PR
              run: |
                  BRANCH_NAME="release/${{ inputs.release_version }}"

                  cat <<EOF > pr_body.md
                  ## 🚀 Release ${{ inputs.release_version }}

                  ### Pull Requests included
                  ${{ steps.changelog.outputs.result }}

                  ### Pre-release Checklist
                  - [ ] Review included changes
                  - [ ] Verify translations
                  - [ ] Confirm version
                  - [ ] Test critical features
                  EOF

                  gh pr create \
                    --title "🚀 RELEASE ${{ inputs.release_version }}" \
                    --body-file pr_body.md \
                    --base main \
                    --head "$BRANCH_NAME" \
                    --label "release"
              env:
                  GH_TOKEN: ${{ github.token }}
