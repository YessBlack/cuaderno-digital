name: RELEASE [PRODUCTION] - Create Release PR

on:
  pull_request_target:
    types: [closed]
    branches:
      - pre-production

permissions:
  contents: write
  pull-requests: write
  actions: read

jobs:
  create_release_pr:
    name: Create Release Pull Request
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.merged == true }}

    steps:
      - name: Checkout pre-production Branch
        uses: actions/checkout@v4
        with:
          ref: pre-production
          fetch-depth: 0

      - name: Verify Changes Exist
        run: |
          git fetch origin main pre-production

          COMMITS=$(git rev-list --count origin/main..origin/pre-production)

          if [ "$COMMITS" -eq 0 ]; then
            echo "‚ùå No hay commits nuevos en pre-production respecto a main"
            exit 1
          fi

          echo "‚úÖ Hay $COMMITS commits nuevos en pre-production"
          git log origin/main..origin/pre-production --oneline

      - name: Transform PR Content
        id: transform_content
        run: |
          PRE_TITLE="${{ github.event.pull_request.title }}"
          PR_BODY="${{ github.event.pull_request.body }}"

          # Transform title: PRE-RELEASE ‚Üí RELEASE
          RELEASE_TITLE=$(echo "$PRE_TITLE" | sed 's/PRE-RELEASE/RELEASE/g' | sed 's/üöÄ/üöÄ/')

          # Transform body: PRE-RELEASE ‚Üí RELEASE
          RELEASE_BODY=$(echo "$PR_BODY" | sed 's/PRE-RELEASE/RELEASE/g' | sed 's/Pre-release/Release/g' | sed 's/pre-release/release/g')

          # Replace specific phrases
          RELEASE_BODY=$(echo "$RELEASE_BODY" | sed 's/This PR prepares PRE-RELEASE/This PR prepares RELEASE/g')
          RELEASE_BODY=$(echo "$RELEASE_BODY" | sed 's/This PR prepares RELEASE \*\*/This PR prepares RELEASE **/g')

          # Change checklist from Pre-release to Release
          RELEASE_BODY=$(echo "$RELEASE_BODY" | sed 's/### Pre-release Checklist/### Release Checklist/g')

          # Change "Pre-Release prepared" to "Release prepared"
          RELEASE_BODY=$(echo "$RELEASE_BODY" | sed 's/Pre-Release prepared/Release prepared/g')

          # Save to files to avoid issues with special characters
          echo "$RELEASE_TITLE" > /tmp/release_title.txt
          echo "$RELEASE_BODY" > /tmp/release_body.txt

          echo "‚úÖ Content transformed successfully"
          echo "üìù Title: $RELEASE_TITLE"

      - name: Create Release PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_TITLE=$(cat /tmp/release_title.txt)
          RELEASE_BODY=$(cat /tmp/release_body.txt)

          gh pr create \
            --title "$RELEASE_TITLE" \
            --body "$RELEASE_BODY" \
            --base main \
            --head pre-production \
            --label "release" \
            --assignee "${{ github.actor }}"

      - name: Notify Completion
        run: |
          echo "‚úÖ Release PR created successfully!"
          echo "üîó Check the PR in GitHub to review all changes."
          echo "üöÄ Next step: Merge the Release PR to main to trigger the tagging workflow."
