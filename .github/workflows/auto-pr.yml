name: Auto Draft PR

on:
  push:
    branches-ignore:
      - 'main'
      - 'dev'
      - 'pre-production'
      - 'master'

permissions:
  contents: write
  pull-requests: write

jobs:
  auto_draft_pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}

      - name: Get first commit message
        id: commit
        run: |
          FIRST_COMMIT=$(git log --reverse --pretty=format:"%s" | head -n 1)
          echo "message=$FIRST_COMMIT" >> $GITHUB_OUTPUT

      - name: Load PR template
        id: pr_template
        run: |
          echo "body<<EOF" >> $GITHUB_OUTPUT
          cat .github/pull_request_template.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Draft PR if not exists
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branch = context.ref.replace('refs/heads/', '');
            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${context.repo.owner}:${branch}`,
              state: 'open',
            });

            if (prs.length > 0) {
              core.notice(`PR already exists: #${prs[0].number}`);
            } else {
              const { data: pr } = await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                head: branch,
                base: "dev",
                title: `${{ steps.commit.outputs.message }}`,
                body: `${{ steps.pr_template.outputs.body }}`,
                draft: true,
              });
              core.notice(`Created draft PR: #${pr.number}`);
            }
